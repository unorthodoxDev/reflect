What happens when you initialize a repository? Why do you need to do it?

   Upon initializing a repository a .git folder is created in that location. It needs to be done to make it work with Git.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

   The staging area is sort of a bridge between the working directory and the repository. It gives you the flexibilty of choosing exactly how you would like to your commit to be.

How can you use the staging area to make sure you have one commit per logical
change?

   By using 'git diff' and 'git diff --staged'.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

   In situations you would like to experiment or try new things to your file it is very helpful to create a branch.
   Branches are helpful because you don't have to worry about messing up your official file 

How do the diagrams help you visualize the branch structure?

   By seeing a diagram it makes it easier to undertand the branch structure because you can grab the whole concept in a glance.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

   Merging two branches together brings the two branches into a single one thus bringing thier functionality together and also both of them will be able to access commits of each other.
   I think because the diagram representation makes it all easier to understand the overall concept.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

   Automatic                                           Manual
 Pros : Easy                                         Pros : More control over what to be done and how
 Cons : In rare cases might create a bug              Cons : Might give you headache
       or put something you don't want. 